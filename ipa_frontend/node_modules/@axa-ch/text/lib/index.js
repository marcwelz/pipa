import{LitElement as e}from"lit";const t={};class n extends e{inlineStyles(e="styles"){const n=this.getRootNode(),s=t[this.tagName]||new WeakMap,a=s.get(n)||{},r=(a.referenceCount||0)+1;if(a.referenceCount=r,s.set(n,r),t[this.tagName]=s,1===r){this.ownerDocument!==n&&(this._rootNode=n);const t=document.createElement("style");let s=this.constructor[e];const r=this.nodeName.toLowerCase(),o=this.constructor.tagName;r!==o&&(s=s.split(o).join(r)),t.textContent=s,t.dataset.name=this.tagName.toLowerCase();(n instanceof ShadowRoot?n:document.head).appendChild(t),a.style=t}s.set(n,a),t[this.tagName]=s}disconnectedCallback(){super.disconnectedCallback();const e=t[this.tagName];if(!e)return;const n=this._rootNode||this.ownerDocument,s=e.get(n)||{},a=(s.referenceCount||0)-1;if(a<1){e.delete(n);const{style:t}=s;t&&t.parentNode&&t.parentNode.removeChild(t)}else s.referenceCount=a,e.set(n,s)}}class s extends n{connectedCallback(){super.connectedCallback(),this.inlineStyles()}createRenderRoot(){return this}}var a=(e,t)=>{const n=e.toLowerCase();return window.customElements.get(n)||window.customElements.define(n,t),n};const r=e=>!(null==e),o=new Map;[[String,""],[Boolean,!1],[Object,{}],[Array,[]],[Number,0],[Function,()=>{}]].forEach((([e,t])=>{o.set(e,t)}));const i=()=>{},c=e=>{const{constructor:{properties:t}}=e;Object.keys(t).forEach((n=>{const s=t[n],{type:a,converter:c,defaultValue:l}=s;if(!a){if(!c)throw new Error(`<${e.nodeName}> property "${n}" is missing a type!`);return}let h=e[n];r(h)||(h=a===Boolean?e.hasAttribute(n):e.getAttribute(n),r(h)?e[n]=((e,t)=>t===Number?parseFloat(e):t===Function?i:t===Array||t===Object?JSON.parse(e):e)(h,a):void 0===l&&"defaultValue"in s||(e[n]="defaultValue"in s?l:o.get(a)))}))};class l extends s{static get tagName(){return"axa-text"}static get styles(){return'axa-text > * {\n  font-size: 20px;\n  letter-spacing: 0.01em;\n  line-height: 30px;\n  font-family: "Source Sans Pro", Arial, sans-serif;\n  margin: 0;\n}\n\naxa-text[variant=size-2] > * {\n  font-size: 18px;\n  letter-spacing: 0.01em;\n  line-height: 27px;\n  font-family: "Source Sans Pro", Arial, sans-serif;\n}\n\naxa-text[variant=size-3] > * {\n  font-size: 16px;\n  letter-spacing: 0.02em;\n  line-height: 24px;\n  font-family: "Source Sans Pro", Arial, sans-serif;\n}\n\naxa-text[variant=size-4] > * {\n  font-size: 14px;\n  letter-spacing: 0.02em;\n  line-height: 17px;\n  font-family: "Source Sans Pro", Arial, sans-serif;\n}\n\naxa-text[variant=semibold] > * {\n  font-size: 20px;\n  letter-spacing: 0.01em;\n  line-height: 30px;\n  font-family: "Source Sans Pro", Arial, sans-serif;\n  font-weight: 600;\n}\n\naxa-text[variant=bold] > * {\n  font-size: 20px;\n  letter-spacing: 0.01em;\n  line-height: 30px;\n  font-family: "Source Sans Pro", Arial, sans-serif;\n  font-weight: bold;\n}'}static get properties(){return{variant:{type:String,reflect:!0}}}constructor(){super(),c(this)}watch(e){switch(e){case"stop":this._observer&&this._observer.disconnect();break;case"start":this._observer||(this._observer=new MutationObserver((()=>this.customRender()))),this._observer.observe(this,{childList:!0})}}customRender(){if([...this.childNodes].filter((e=>3===e.nodeType&&e.textContent.trim())).length){const e=document.createElement("p");e.textContent=this.textContent,this.watch("stop"),this.innerHTML="",this.appendChild(e),this.watch("start")}}connectedCallback(){super.connectedCallback(),this.customRender()}disconnectedCallback(){super.disconnectedCallback(),this.watch("stop")}}((e,t,n)=>{const s="string"==typeof t&&t;let r="";e.forEach((e=>{const o=e instanceof HTMLElement?e.constructor:e,{tagName:i}=o,c=!s&&t[i];if(c){if(!window.customElements.get(i)&&o.versions)throw Error(`'versions' is a reserved class property, but was found in ${i}'s class`);o.versions=c,a(i,o)}let{versions:l}=o;!l&&n&&(l=t[n.constructor.tagName],l[i]=Object.values(l)[0]);const h=s||l[i];r=((e,t)=>{return`${e}-${n=t,`${n}`.replace(/\./g,"-").replace(/[^A-Za-z0-9-]/g,"")}`;var n})(i,h),a(r,class extends o{})}))})([l],{"axa-text":{"axa-text":"6.0.2"}});export{l as default};
